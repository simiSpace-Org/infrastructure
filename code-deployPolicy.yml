AWSTemplateFormatVersion: "2010-09-09"
Description: Cloud Formation with 4 policies, 2 roles and 1 profile
Parameters:
  S3CodeDeployBucket:
    Type: String
    Default: "simiiscodedeploydemo"
  GitHubUser: 
    Type: String
    Default: "ghactions-app"

Resources:
  # upload from github actions to s3
  GHUploadToS3Policy:
    Type: AWS::IAM::Policy
    Properties:
      Users:
        - !Ref GitHubUser
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "s3:Get*"
              - "s3:List*"
              - "s3:PutObject"
            Resource:
              - !Sub 'arn:aws:s3:::${S3CodeDeployBucket}/'
              - !Sub 'arn:aws:s3:::${S3CodeDeployBucket}/*'
      PolicyName: "GHUploadToS3"

  # github codedeploy policy for GA to call CodeDeploy
  GHCodeDeploy:
    Type: AWS::IAM::Policy
    Properties:
      Users:
        - !Ref GitHubUser
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "codedeploy:RegisterApplicationRevision"
              - "codedeploy:GetApplicationRevision"
            Resource:
              - !Sub 'arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:application:csye6225-webapp'
          - Effect: Allow
            Action:
              - "codedeploy:CreateDeployment"
              - "codedeploy:GetDeployment"
            Resource:
              - !Sub 'arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentgroup:csye6225-webapp/csye6225-webapp-deployment'
          - Effect: Allow
            Action:
              - "codedeploy:GetDeploymentConfig"
            Resource:
              - !Sub 'arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentconfig:CodeDeployDefault.OneAtATime'
              - !Sub 'arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentconfig:CodeDeployDefault.HalfAtATime'
              - !Sub 'arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentconfig:CodeDeployDefault.AllAtOnce'
      PolicyName: "GHCodeDeploy"

  GHEC2Ami:
    Type: AWS::IAM::Policy
    Properties:
      Users:
        - !Ref GitHubUser
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "ec2:AttachVolume"
              - "ec2:AuthorizeSecurityGroupIngress"
              - "ec2:CopyImage"
              - "ec2:CreateImage"
              - "ec2:CreateKeypair"
              - "ec2:CreateSecurityGroup"
              - "ec2:CreateSnapshot"
              - "ec2:CreateTags"
              - "ec2:CreateVolume"
              - "ec2:DeleteKeyPair"
              - "ec2:DeleteSecurityGroup"
              - "ec2:DeleteSnapshot"
              - "ec2:DeleteVolume"
              - "ec2:DeregisterImage"
              - "ec2:DescribeImageAttribute"
              - "ec2:DescribeImages"
              - "ec2:DescribeInstances"
              - "ec2:DescribeInstanceStatus"
              - "ec2:DescribeRegions"
              - "ec2:DescribeSecurityGroups"
              - "ec2:DescribeSnapshots"
              - "ec2:DescribeSubnets"
              - "ec2:DescribeTags"
              - "ec2:DescribeVolumes"
              - "ec2:DetachVolume"
              - "ec2:GetPasswordData"
              - "ec2:ModifyImageAttribute"
              - "ec2:ModifyInstanceAttribute"
              - "ec2:ModifySnapshotAttribute"
              - "ec2:RegisterImage"
              - "ec2:RunInstances"
              - "ec2:StopInstances"
              - "ec2:TerminateInstances"
            Resource:
              - "*"
      PolicyName: "GHEC2Ami"
      
  # codedeploy ec2 s3 policy
  CodeDeployEC2S3Policy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "s3:Get*"
              - "s3:List*"
            Resource:
              - !Sub 'arn:aws:s3:::${S3CodeDeployBucket}/'
              - !Sub 'arn:aws:s3:::${S3CodeDeployBucket}/*'
      PolicyName: "CodeDeployEC2S3"
      Roles:
        - !Ref myCodeDeployEC2ServiceRole

# Service Role to perfom GH actions 
  myCodeDeployEC2ServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      RoleName: myCodeDeployEC2ServiceRole

  myCodeDeployEC2ServiceRole:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: CodeDeployEC2Profile
      Roles:
        - !Ref myCodeDeployEC2ServiceRole
# create service role for codedeploy
  CodeDeployServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codedeploy.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      RoleName: CodeDeployServiceRole        
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole'
      